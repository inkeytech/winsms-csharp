/* 
 * WINSMS
 *
 * WinSMS RESTful API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@winsms.co.za
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// MessageRecipientDetails
    /// </summary>
    [DataContract]
    public partial class MessageRecipientDetails :  IEquatable<MessageRecipientDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MessageRecipientDetails" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MessageRecipientDetails() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="MessageRecipientDetails" /> class.
        /// </summary>
        /// <param name="mobileNumber">A recipient mobile number, using the international E164 (without the plus) format. (required).</param>
        /// <param name="clientMessageId">***Optional*** - A parameter to identify an individual SMS message recipient on your system. The clientMessageId parameter is NOT saved by the WinSMS API.   The value of the clientMessageId parameter is returned in the ***submittedRecipientResult*** object of the response, allowing you to match a sent message to a returned message result status. .</param>
        public MessageRecipientDetails(string mobileNumber = default(string), string clientMessageId = default(string))
        {
            // to ensure "mobileNumber" is required (not null)
            if (mobileNumber == null)
            {
                throw new InvalidDataException("mobileNumber is a required property for MessageRecipientDetails and cannot be null");
            }
            else
            {
                this.MobileNumber = mobileNumber;
            }
            this.ClientMessageId = clientMessageId;
        }
        
        /// <summary>
        /// A recipient mobile number, using the international E164 (without the plus) format.
        /// </summary>
        /// <value>A recipient mobile number, using the international E164 (without the plus) format.</value>
        [DataMember(Name="mobileNumber", EmitDefaultValue=false)]
        public string MobileNumber { get; set; }

        /// <summary>
        /// ***Optional*** - A parameter to identify an individual SMS message recipient on your system. The clientMessageId parameter is NOT saved by the WinSMS API.   The value of the clientMessageId parameter is returned in the ***submittedRecipientResult*** object of the response, allowing you to match a sent message to a returned message result status. 
        /// </summary>
        /// <value>***Optional*** - A parameter to identify an individual SMS message recipient on your system. The clientMessageId parameter is NOT saved by the WinSMS API.   The value of the clientMessageId parameter is returned in the ***submittedRecipientResult*** object of the response, allowing you to match a sent message to a returned message result status. </value>
        [DataMember(Name="clientMessageId", EmitDefaultValue=false)]
        public string ClientMessageId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MessageRecipientDetails {\n");
            sb.Append("  MobileNumber: ").Append(MobileNumber).Append("\n");
            sb.Append("  ClientMessageId: ").Append(ClientMessageId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MessageRecipientDetails);
        }

        /// <summary>
        /// Returns true if MessageRecipientDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of MessageRecipientDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MessageRecipientDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MobileNumber == input.MobileNumber ||
                    (this.MobileNumber != null &&
                    this.MobileNumber.Equals(input.MobileNumber))
                ) && 
                (
                    this.ClientMessageId == input.ClientMessageId ||
                    (this.ClientMessageId != null &&
                    this.ClientMessageId.Equals(input.ClientMessageId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MobileNumber != null)
                    hashCode = hashCode * 59 + this.MobileNumber.GetHashCode();
                if (this.ClientMessageId != null)
                    hashCode = hashCode * 59 + this.ClientMessageId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
